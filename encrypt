#! /bin/bash

usage() {
        printf "Usage: [PROGRAM_NAME] [OPTION] [FILE/DIRECTORY]\n"
	printf "Options: [ -f | --file ] [ -df | --decrypt-file] [ -d | --directory ] [ -dd | --decrypt-directory]\n"
}

check_args() {

	if [ "$#" -ne 2 ]; then
		usage
		exit_func 1
	elif [ "$#" -eq 1 ]; then
		usage
		exit_func 1
	elif [ "$#" -eq 2 ]; then
		return 0
	fi
}

exit_func () {
	if [ "$1" -eq 1 ]; then
		printf "Exit 1 --> Wrong Number of Arguments.\n"
		usage
		exit 1
	elif [ "$1" -eq 2 ]; then 
		printf "File or Directory Arguments Were Incorrect.\n"
		usage
		exit 2
	elif [ "$1" -eq 0 ]; then
		printf "Exit 0 --> Success!\n"
		exit 0
	fi
}

if [ "$(check_args)" ]; then
	while [ "$1" != "" ]; do
			case $1 in
				-f | --file )		    if [ -f $2 ]; then
								gpg -c --cipher-algo AES256 $2
                                        			shred -u -n $(shuf -i 3-10 -n 1) $2
                                        		 	exit_func 0
							    else
								printf "%s is not a file.\n" $2
								exit_func 2
							    fi
							    ;;

				-df | --decrypt-file )	    if [ -f $2 ]; then
                	                	                gpg $2
								shred -u -n $(shuf -i 3-10 -n 1) $2
								exit_func 0
							    else
								printf "%s is not a file.\n" $2
								exit_func 2
        		                                    fi
							    ;;

				-d | --directory )	    if [ -d $2 ]; then
								name=${2%/}
								tar -cvf "$name".tar "$2"
								gpg -c --cipher-algo AES256 "$name.tar"
								shred -u -n $(shuf -i 3-10 -n 1) "$name.tar"
								rm -rf $2
								exit_func 0
							    else
								printf "%s is not a directory.\n" $2
								exit_func 2
        	                        	            fi
							    ;;

				-dd | --decrypt-directory ) if [ -f $2 ]; then
                	                                 	gpg -o- $2 | tar xvf -
								shred -u -n $(shuf -i 3-10 -n 1) $2
								exit_func 0
							    else
								printf "%s is not a directory.\n" $2
								exit_func 2
							    fi  
						            ;;
	
				* ) 			    exit_func 1
			esac
	done
fi
